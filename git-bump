#!/usr/bin/env bash

set +o errexit
set +o nounset

default_variables() {
  ROOT_DIR=$(git rev-parse --show-toplevel) || exit 1
  VERSION="0.0.1"

  last_version=$(git describe --abbrev=0 --tags)
  next_version=

  signed=

  declare -a types
  types=(feat fix perf)
  type_feat="Features"
  type_fix="Bug Fixes"
  type_perf="Performance Improvements"
}

# exit with message to stderr
exit_err() {
  echo "$@" >&2
  exit 1
}

has_cmd() {
  command -v $1 >/dev/null 2>&1
}

# exit if command isn't available
depend() {
  has_cmd $1 || exit_err "Missing dependency: $1"
}

parse_opt() {
  case "$1" in
    h|help)
      echo "help"
      exit
      ;;
    s|signed)
      signed=1
      ;;
    l|last|last-version)
      last_version="$2"
      return 1
      ;;
    n|next|next-version)
      next_version="$2"
      return 1
      ;;
    *)
      exit_err "Invalid argument: $1"
  esac
}

parse_opts() {
  while [ -n "$1" ]; do
    case "$1" in
      --*)
        parse_opt ${1:2}
        ;;
      -*)
        opts=${1:1}
        for (( i = 0; i < ${#opts}; i++ )); do
          parse_opt ${opts:$i:1} "${@:2}" || shift
        done
        ;;
      *)
        exit_err "Invalid argument: $1"
    esac
    shift
  done
}

# bump_git() {
#
# }

bump_npm() {
  [[ -f "${ROOT_DIR}/package.json" ]] || return
  has_cmd npm || exit_err "package.json found but missing npm dependency"
  npm version --no-git-tag-version "$VERSION"
}

depend git

default_variables
parse_opts "$@"

# bump_npm
# bump_git
